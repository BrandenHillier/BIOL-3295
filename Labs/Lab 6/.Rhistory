m3 = 1
m4 = 20
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,120))
# The fecundity function
Fecundity = function(a,L){
m1 = 1
# m2: x-intercept
m2 = 3
m3 = 1
m4 = 100
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,120))
# The fecundity function
Fecundity = function(a,L){
m1 = 1
# m2: x-intercept
m2 = 3
m3 = 1
m4 = 1000
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,120))
# The fecundity function
Fecundity = function(a,L){
m1 = .1
# m2: x-intercept
m2 = 3
m3 = 1
m4 = 1000
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,120))
# The fecundity function
Fecundity = function(a,L){
m1 = 1
# m2: x-intercept
m2 = 3
m3 = .1
m4 = 1000
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,120))
# The fecundity function
Fecundity = function(a,L){
m1 = 1
# m2: x-intercept
m2 = 3
m3 = .5
m4 = 1000
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,120))
# The fecundity function
Fecundity = function(a,L){
m1 = .5
# m2: x-intercept
m2 = 3
m3 = .3
m4 = 1000
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,120))
# The fecundity function
Fecundity = function(a,L){
m1 = .5
# m2: x-intercept
m2 = 3
m3 = .3
m4 = 10
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,120))
# The fecundity function
Fecundity = function(a,L){
m1 = .5
# m2: x-intercept
m2 = 3
m3 = .3
m4 = 30
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,120))
# The fecundity function
Fecundity = function(a,L){
m1 = 1
# m2: x-intercept
m2 = 3
m3 = .3
m4 = 30
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,120))
# The fecundity function
Fecundity = function(a,L){
m1 = .5
# m2: x-intercept
m2 = 3
m3 = .5
m4 = 30
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,120))
# The fecundity function
Fecundity = function(a,L){
m1 = .5
# m2: x-intercept
m2 = 3
m3 = .5
m4 = 100
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,120))
# The fecundity function
Fecundity = function(a,L){
m1 = .5
# m2: x-intercept
m2 = 3
m3 = .5
m4 = 100
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,150))
# The fecundity function
Fecundity = function(a,L){
m1 = .5
# m2: x-intercept
m2 = 3
m3 = .5
m4 = 100
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,50))
# The fecundity function
Fecundity = function(a,L){
m1 = .2
# m2: x-intercept
m2 = 3
m3 = .5
m4 = 300
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,50))
# The fecundity function
Fecundity = function(a,L){
m1 = .2
# m2: x-intercept
m2 = 3
m3 = .5
m4 = 500
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,50))
# The fecundity function
Fecundity = function(a,L){
m1 = .2
# m2: x-intercept
m2 = 3
m3 = .5
m4 = 1000
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,50))
# The fecundity function
Fecundity = function(a,L){
m1 = .2
# m2: x-intercept
m2 = 3
m3 = .1
m4 = 1000
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3, ylim = c(0,50))
# The fecundity function
Fecundity = function(a,L){
m1 = .2
# m2: x-intercept
m2 = 3
m3 = .1
m4 = 1000
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3)
# The fecundity function
Fecundity = function(a,L){
m1 = .2
# m2: x-intercept
m2 = 3
m3 = .1
m4 = 500
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3)
# The fecundity function
Fecundity = function(a,L){
m1 = .2
# m2: x-intercept
m2 = 3
m3 = .1
m4 = 500
m5 = 1
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3,ylim = c(0,120))
m1vec = seq(0,10,.1)
plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20))/((1-exp(-3*m1vec))*exp(-6))+10)
plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l")
m1vec = seq(0,10,.1)
m3=1
plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l")
m1vec = seq(0,10,.1)
m3=2
plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l")
m1vec = seq(0,10,.1)
m3=.1
plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l")
m1vec = seq(0,10,.1)
m3=.2
plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l")
m1vec = seq(0,10,.1)
m3=.5
plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l")
m1vec = seq(0,10,.1)
m3=.4
plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l")
m1vec = seq(0,10,.1)
m3=.2
plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l")
m1vec = seq(0,10,.1)
m3=.1
plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l")
m1vec = seq(0,10,.1)
m3=.15
plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l")
plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l", xlim = c(0,1))
Fecundity = function(a,L){
m1 = .45
# m2: x-intercept
m2 = 3
m3 = .15
m0=110/(1-exp(-3*m1))/exp(-6*m3)
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
# m1vec = seq(0,10,.1)
# m3=.15
# plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l", xlim = c(0,1))
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3,ylim = c(0,120))
Fecundity = function(a,L){
m1 = .45
# m2: x-intercept
m2 = 3
m3 = .15
m0=50/(1-exp(-3*m1))/exp(-6*m3)
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
# m1vec = seq(0,10,.1)
# m3=.15
# plot(m1vec, -60*((1-exp(-17*m1vec))*exp(-20*m3))/((1-exp(-3*m1vec))*exp(-6*m3))+10, ylab="", typ="l", xlim = c(0,1))
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,1.4), typ="l", lwd=3,ylim = c(0,120))
m1 = .45
# m2: x-intercept
m2 = 3
m3 = .15
m0=50/(1-exp(-3*m1))/exp(-6*m3)
m0
m1 = .45
# m2: x-intercept
m2 = 3
m3 = .15
m0=110/(1-exp(-3*m1))/exp(-6*m3)
m0
m5vec = seq(0,10,.1)
val = ln(365/(166.02*.6^-m5vec))/ln(1.6)
plot(m5vec,val)
lines(m5vec,m5vec)
plot(m5vec,val)
m5vec = seq(0,10,.1)
val = ln(365/(166.02*.6^-m5vec))/ln(1.6)
plot(m5vec,val)
lines(m5vec,m5vec)
m5vec = seq(0,10,.1)
val = ln(365/(166.02*.6^-m5vec))/ln(1.6)
m5vec = seq(0,10,.1)
val = log(365/(166.02*.6^-m5vec))/log(1.6)
plot(m5vec,val)
lines(m5vec,m5vec)
m5vec = seq(0,2,.01)
val = log(365/(166.02*.6^-m5vec))/log(1.6)
plot(m5vec,val,typ="l")
lines(m5vec,m5vec)
m5vec = seq(0.6,.8,.01)
val = log(365/(166.02*.6^-m5vec))/log(1.6)
plot(m5vec,val,typ="l")
lines(m5vec,m5vec)
m5vec = seq(0.5,.9,.01)
val = log(365/(166.02*.6^-m5vec))/log(1.6)
plot(m5vec,val,typ="l")
lines(m5vec,m5vec)
166.019/(.6^.8)
# The fecundity function
Fecundity = function(a,L){
m1 = .45
# m2: x-intercept
m2 = 3
m3 = .15
m5 = .8
m4 = 250
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
# m5vec = seq(0.5,.9,.01)
# val = log(365/(166.02*.6^-m5vec))/log(1.6)
# plot(m5vec,val,typ="l")
# lines(m5vec,m5vec)
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,0.6), typ="l", lwd=3,ylim = c(0,120))
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,0.6), typ="l", lwd=3,ylim = c(0,120))
lines(avec, Fecundity(avec,1.6), lwd=3, lty=2)
source('~/Desktop/BIOL-3295/Labs/Lab 6/Body_Size_Evolution.R', echo=TRUE)
source('~/Desktop/BIOL-3295/Labs/Lab 6/Body_Size_Evolution.R', echo=TRUE)
source('~/Desktop/BIOL-3295/Labs/Lab 6/Body_Size_Evolution.R', echo=TRUE)
source('~/Desktop/BIOL-3295/Labs/Lab 6/Body_Size_Evolution.R', echo=TRUE)
source('~/Desktop/BIOL-3295/Labs/Lab 6/Body_Size_Evolution.R', echo=TRUE)
l1
# Evolution of body size in Drosphila
# Based on the section beginning on p107 of Fox et al.
# Remove all objects - usually start with this
rm(list=ls())
# Load a package that provides a color palette
require(viridis)
# The number of time steps to run the simulation
total.time = 500
# Larval mortality rate
l0 = .1
# Adult mortality rate
l1 = l0*0.5
Popn.Size=1000
# Record the directory of this file. It is hard to automate
# this step: you will need to write it in.
wd = "/Users/amyhurford/Desktop/BIOL-3295/Labs/Lab 6/"
# Set the working directory to the directory of the current file
setwd(wd)
# Create a list of all the strategies in the "Body_Size_Strategies" folder
strategies.list = list.files('Body_Size_Strategies')
# The number of strategies
Number.Strategies = length(strategies.list)
# set the working directory to the subfolder: "Body_Size_Strategies", note
# that all the strategies you want to load in should be in a subfolder
# located in the same directory as this file.
setwd("Body_Size_Strategies")
source(strategies.list[1])
Strategy = data.frame(Strategy=1,L=L)
# Each strategy is named by its position in strategies.list.
for(i in seq(2,Number.Strategies)){
source(strategies.list[i])
Strategy = rbind(Strategy,c(Strategy = i,L=L))
}
# Change back the working directory
setwd(wd)
# The development function
Development = function(L){
d0 =4
d1 = 2.7
d2 = 5
D = d0*L^d1 + d2
return(D)
}
Lvec = seq(.55,2,.01)
plot(Lvec,Development(Lvec),typ="l", lwd=3, ylim = c(0,30), xlim = c(0.55,2), xlab = "Thorax length, L (mm)", ylab = "Development time, d(L)", main = "Fox et al. 2001: Evolutionary ecology, Fig. 8.2")
plot(Lvec,exp(-l0*Development(Lvec)),typ="l", lty=2, lwd=3, xlim=c(0.55,2), ylim = c(0,.6), xlab = "Thorax length, L (mm)", ylab = "Survival from egg to adult", main = "Fox et al. 2001: Evolutionary ecology, Fig. 8.2")
Develop.time = Development(Strategy$L)
Strategy = cbind(Strategy,Develop.time)
# Define the characteristics of all indviduals in the population
strategy = NULL
develop.time = NULL
L = NULL
age = NULL
for(i in seq(1,Number.Strategies)){
strategy = c(strategy,rep(i,Popn.Size/Number.Strategies))
develop.time=c(develop.time,rep(Strategy$Develop.time[i],Popn.Size/Number.Strategies))
L = c(L,rep(Strategy$Develop.time[i],Popn.Size/Number.Strategies))
age=c(age,rep(0,Popn.Size/Number.Strategies))
}
Popn = data.frame(cbind(strategy=strategy,age=age,L=L,develop.time))
# The fecundity function
Fecundity = function(a,L){
m1 = .45
# m2: x-intercept
m2 = 3
m3 = .15
m5 = .8
m4 = 250
m0 = m4*L^m5
m = m0*(1-exp(-m1*(a-m2)))*exp(-m3*a)
return(m)
}
avec = seq(0,20,.1)
plot(avec,Fecundity(avec,0.6), typ="l", lwd=3,ylim = c(0,120), xlab = "Age (days since eclosion)", ylab = "Female eggs, m(x)", main = "Fox et al. 2001: Evolutionary ecology, Fig. 8.2")
lines(avec, Fecundity(avec,1.6), lwd=3, lty=2)
dscore = age
bscore = age
Number = matrix(0,total.time+1,1+Number.Strategies)
Number[1,]=c(0,t(unname(table(Popn$strategy))))
dscore[Popn$age>=Popn$develop.time] = l1
dscore[Popn$age<Popn$develop.time] = l0
dscore
cum.dscore = cumsum(dscore)
cum.dscore
r1 = runif(1, 0, cum.dscore[length(Popn[,1])])
r1
r1 = runif(1, 0, cum.dscore[length(Popn[,1])])
r1
r1 = runif(1, 0, cum.dscore[length(Popn[,1])])
r1
source('~/Desktop/BIOL-3295/Labs/Lab 6/Body_Size_Evolution.R', echo=TRUE)
source('~/Desktop/BIOL-3295/Labs/Lab 6/Body_Size_Evolution.R', echo=TRUE)
source('~/Desktop/BIOL-3295/Labs/Lab 6/Body_Size_Evolution.R', echo=TRUE)
source('~/Desktop/BIOL-3295/Labs/Lab 6/Body_Size_Evolution.R', echo=TRUE)
legend("topleft", legend = Strategy$L, col=Colours, lty = rep(1,Number.Strategies),box.lwd = 0,main="L")
source('~/Desktop/BIOL-3295/Labs/Lab 6/Body_Size_Evolution.R', echo=TRUE)
source('~/Desktop/BIOL-3295/Labs/Lab 6/Body_Size_Evolution.R', echo=TRUE)
